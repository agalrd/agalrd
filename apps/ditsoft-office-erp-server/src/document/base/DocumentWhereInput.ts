/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { EnumDocumentWorkflowStatus } from "./EnumDocumentWorkflowStatus";
import { JsonFilter } from "../../util/JsonFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { WorkflowListRelationFilter } from "../../workflow/base/WorkflowListRelationFilter";
import { VersionListRelationFilter } from "../../version/base/VersionListRelationFilter";

@InputType()
class DocumentWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  content?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  documentVersion?: IntNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumDocumentWorkflowStatus,
  })
  @IsEnum(EnumDocumentWorkflowStatus)
  @IsOptional()
  @Field(() => EnumDocumentWorkflowStatus, {
    nullable: true,
  })
  workflowStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  metadata?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  checkedOutBy?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  checkedOutAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => WorkflowListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WorkflowListRelationFilter)
  @IsOptional()
  @Field(() => WorkflowListRelationFilter, {
    nullable: true,
  })
  workflows?: WorkflowListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => VersionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => VersionListRelationFilter)
  @IsOptional()
  @Field(() => VersionListRelationFilter, {
    nullable: true,
  })
  versions?: VersionListRelationFilter;
}

export { DocumentWhereInput as DocumentWhereInput };
