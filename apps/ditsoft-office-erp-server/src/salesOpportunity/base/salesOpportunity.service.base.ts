/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SalesOpportunity as PrismaSalesOpportunity,
} from "@prisma/client";

export class SalesOpportunityServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalesOpportunityCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salesOpportunity.count(args);
  }

  async salesOpportunities(
    args: Prisma.SalesOpportunityFindManyArgs
  ): Promise<PrismaSalesOpportunity[]> {
    return this.prisma.salesOpportunity.findMany(args);
  }
  async salesOpportunity(
    args: Prisma.SalesOpportunityFindUniqueArgs
  ): Promise<PrismaSalesOpportunity | null> {
    return this.prisma.salesOpportunity.findUnique(args);
  }
  async createSalesOpportunity(
    args: Prisma.SalesOpportunityCreateArgs
  ): Promise<PrismaSalesOpportunity> {
    return this.prisma.salesOpportunity.create(args);
  }
  async updateSalesOpportunity(
    args: Prisma.SalesOpportunityUpdateArgs
  ): Promise<PrismaSalesOpportunity> {
    return this.prisma.salesOpportunity.update(args);
  }
  async deleteSalesOpportunity(
    args: Prisma.SalesOpportunityDeleteArgs
  ): Promise<PrismaSalesOpportunity> {
    return this.prisma.salesOpportunity.delete(args);
  }
}
