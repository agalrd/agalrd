/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  HealthPhysicsStaff as PrismaHealthPhysicsStaff,
} from "@prisma/client";

export class HealthPhysicsStaffServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HealthPhysicsStaffCountArgs, "select">
  ): Promise<number> {
    return this.prisma.healthPhysicsStaff.count(args);
  }

  async healthPhysicsStaffs(
    args: Prisma.HealthPhysicsStaffFindManyArgs
  ): Promise<PrismaHealthPhysicsStaff[]> {
    return this.prisma.healthPhysicsStaff.findMany(args);
  }
  async healthPhysicsStaff(
    args: Prisma.HealthPhysicsStaffFindUniqueArgs
  ): Promise<PrismaHealthPhysicsStaff | null> {
    return this.prisma.healthPhysicsStaff.findUnique(args);
  }
  async createHealthPhysicsStaff(
    args: Prisma.HealthPhysicsStaffCreateArgs
  ): Promise<PrismaHealthPhysicsStaff> {
    return this.prisma.healthPhysicsStaff.create(args);
  }
  async updateHealthPhysicsStaff(
    args: Prisma.HealthPhysicsStaffUpdateArgs
  ): Promise<PrismaHealthPhysicsStaff> {
    return this.prisma.healthPhysicsStaff.update(args);
  }
  async deleteHealthPhysicsStaff(
    args: Prisma.HealthPhysicsStaffDeleteArgs
  ): Promise<PrismaHealthPhysicsStaff> {
    return this.prisma.healthPhysicsStaff.delete(args);
  }
}
